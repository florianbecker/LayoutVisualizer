name: windows CodeQL

on: [workflow_dispatch]

jobs:

  Build:
    name: ${{matrix.name}} (${{matrix.config}})
    runs-on: ${{matrix.os}}

    strategy:
      fail-fast: false
      matrix:
        name: [
          windows-2019-msvc2019,
          windows-2019-msvc2019-win32,
          windows-2019-msvc2019-arm64,
          windows-2019-msvc2019-clang,
          windows-2022-msvc2022,
          windows-2022-msvc2022-win32,
          windows-2022-msvc2022-arm64,
          windows-2022-msvc2022-clang
        ]
        config: [Debug, Release]
        include:
          - name: windows-2019-msvc2019
            os: windows-2019
            compiler: cl
            version: Visual Studio 16 2019
            architecture: -A x64
            version2: win64_msvc2019_64
            qtversion: 6.4.2

          - name: windows-2019-msvc2019-win32
            os: windows-2019
            compiler: cl
            version: Visual Studio 16 2019
            architecture: -A Win32
            version2: win32_msvc2019
            qtversion: 5.15.2

          - name: windows-2019-msvc2019-arm64
            os: windows-2019
            compiler: cl
            version: Visual Studio 16 2019
            architecture: -A ARM64
            version2: win64_msvc2019_arm64
            qtversion: 6.4.2

          - name: windows-2019-msvc2019-clang
            os: windows-2019
            compiler: clang-cl
            version: Visual Studio 16 2019
            architecture: -A x64
            toolchain: -T ClangCl
            version2: win64_msvc2019_64
            qtversion: 6.4.2

          - name: windows-2022-msvc2022
            os: windows-2022
            compiler: cl
            version: Visual Studio 17 2022
            architecture: -A x64
            version2: win64_msvc2019_64
            qtversion: 6.4.2

          - name: windows-2022-msvc2022-win32
            os: windows-2022
            compiler: cl
            version: Visual Studio 17 2022
            architecture: -A Win32
            version2: win32_msvc2019
            qtversion: 5.15.2

          - name: windows-2022-msvc2022-arm64
            os: windows-2022
            compiler: cl
            version: Visual Studio 17 2022
            architecture: -A ARM64
            version2: win64_msvc2019_arm64
            qtversion: 6.4.2

          - name: windows-2022-msvc2022-clang
            os: windows-2022
            compiler: clang-cl
            version: Visual Studio 17 2022
            architecture: -A x64
            toolchain: -T ClangCl
            version2: win64_msvc2019_64
            qtversion: 6.4.2

    steps:
      - uses: actions/checkout@v3

      - name: Install Qt
        uses: jurplel/install-qt-action@v3
        with:
          version: '${{matrix.qtversion}}'
          host: 'windows'
          target: 'desktop'
          arch: '${{matrix.version2}}'
          cache: 'true'

      - name: Install Qt (Host)
        if: matrix.architecture == '-A ARM64'
        uses: jurplel/install-qt-action@v3
        with:
          version: '${{matrix.qtversion}}'
          host: 'windows'
          target: 'desktop'
          arch: 'win64_msvc2019_64'
          cache: 'true'

      - name: Dependencies
        run: |
             choco install doxygen.install graphviz -y
             if ( "${{matrix.architecture}}" -eq "-A ARM64" ) {
               echo "Qt6_DIR=${{runner.workspace}}/Qt/${{matrix.qtversion}}/msvc2019_arm64" >> $env:GITHUB_ENV
               echo "QT_PLUGIN_PATH=${{runner.workspace}}/Qt/${{matrix.qtversion}}/msvc2019_arm64/plugins" >> $env:GITHUB_ENV
               echo "QML2_IMPORT_PATH=${{runner.workspace}}/Qt/${{matrix.qtversion}}/msvc2019_arm64/qml" >> $env:GITHUB_ENV
               echo "QT_HOST_PATH=${{runner.workspace}}/Qt/${{matrix.qtversion}}/msvc2019_64/" >> $env:GITHUB_ENV
             }

      - name: Initialize CodeQL
        if: matrix.compiler != 'clang-cl'
        uses: github/codeql-action/init@v2
        with:
          languages: 'cpp'

      - name: Create Build Environment
        run: cmake -E make_directory ${{runner.workspace}}/build

      - name: Configure CMake
        working-directory: ${{runner.workspace}}/build
        run: cmake $env:GITHUB_WORKSPACE -DCMAKE_BUILD_TYPE:STRING=${{matrix.config}} -G"${{matrix.version}}" ${{matrix.architecture}} ${{matrix.toolchain}}

      - name: Build
        working-directory: ${{runner.workspace}}/build
        run: cmake --build . --config ${{matrix.config}}

      - name: Perform CodeQL Analysis
        if: matrix.compiler != 'clang-cl'
        uses: github/codeql-action/analyze@v2
